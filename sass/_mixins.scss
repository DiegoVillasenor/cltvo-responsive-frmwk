// MIXINS
// ------
//
// Agrega aquí tus mixins
// 

// Puro CSS
@mixin border-radius( $radius ){
	border-radius: $radius;
		-moz-border-radius: $radius;
		-webkit-border-radius: $radius;
		-khtml-border-radius: $radius;
}

@mixin border-sizing($box) {
	box-sizing: $box;
		-webkit-box-sizing: $box;
		-moz-box-sizing: $box;
}

@mixin declara-font-face($font-family, $font-filename, $font-weight: normal, $font-style: normal, $font-stretch: normal) {
	@font-face {
		font-family: '#{$font-family}';
		src: url('#{$font-filename}.eot');
    	src: url('#{$font-filename}.eot?#iefix') format('embedded-opentype'),
         url('#{$font-filename}.woff') format('woff'),
         url('#{$font-filename}.ttf') format('truetype'),
         url('#{$font-filename}.svg##{$font-filename}') format('svg');
		font-weight: $font-weight;
		font-style: $font-style;
		font-stretch: $font-stretch;
	}
}

 
// Devuelve tamaño de fuente con line-height y margin bottom.
// 
// @param number $font-size: (req) tamaño de la fuente
// @param number $line-height: Alto de la interlínea. Si no le pasas número lo calcula 
// @param bool/number $margin: Margen inferior. Si no le pasas número usa la interlínea
//

@mixin tamano-fuente($font-size, $line-height: $font-size + 1, $margin: true){
	font-size: tamano($font-size);
	line-height: tamano($line-height);
	@if( type-of($margin) == bool and $margin == true ){
		margin-bottom: tamano($line-height);
	}@else if( type-of($margin) == number ){
		margin-bottom: tamano($margin);
	}
}

// Interfaz para media queries!!

@mixin respond-to($media) {
	@if $media == iPhone {
		@media only screen and (max-width: $break-small) { @content; }
	}
	@else if $media == iPadVer {
		@media only screen and (max-width: $break-medium) { @content; }
	}
	@else if $media == iPadHor {
		@media only screen and (max-width: $break-normal) { @content; }
	}
}