// FUNCTIONS
// ---------
//
// Agrega aquí tus funciones
// 
//

// Se usa en el Loop para crear todos los tamaños de columnas
@function columns($num){
    @return ($cada-col * $num) + ($base-porcentaje * ($num - 1));
}

// Calculate Centered Class Margins
@function centered($num) {
    @return 50% - ((($num * $cada-col) + (($num - 1) * $base-porcentaje)) / 2);
}

// Crea el estilo para empujar columnas
@function push_x($num, $first-child: false) {
	@if $first-child {
		@return ($cada-col * $num) + ($base-porcentaje * $num) ;
	}
	@else {
		@return ($cada-col * $num) + ($base-porcentaje * $num ) + $base-porcentaje;
	}
}


// Devuelve los tamaños de la lista de tamaños (_config)
// 
// @param number $n: (req) número de casilla de la lista de tamaños (1 es el mínimo y 2 es el base)
// @param string $unit: Unidades a regresar. Si le pasas rem lo calcula de acuerdo al número base
// @param bool/number $division: Le puedes pasar un divisor para devolver cifras más pequeñas

@function tamano($n, $unit:px, $division:false){
	$tamano: nth($tamanos, $n);
	@if( type-of($division) == number ){
		$tamano: $tamano/2;
	}
	@if($unit == px){
		@return $tamano + px;
	}@else if($unit == rem){
		@return $tamano / $base + rem;
	}	
}

// Regresa el valor sin unidades
@function sinUnidad($num) {
	@return ($num / ($num * 0 + 1));
}

// Create class names from column count integers
@function number-as-word($number){
  $w: "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven",
"twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen",
"twenty", "twenty-one", "twenty-two", "twenty-three", "twenty-four", "twenty-five", "twenty-six", "twenty-seven",
"twenty-eight", "twenty-nine", "thirty", "thirty-one", "thirty-two", "thirty-three",
"thirty-four", "thirty-five", "thirty-six";
  @return nth($w, $number);
}